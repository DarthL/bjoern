
dependencies{

  compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
  compile group: 'org.json', name: 'json', version: '20141113'

  compile project(':orientdbimporter') 

  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.13'
    
  runtime group: 'ch.qos.logback', name: 'logback-core', version: '1.1.3'
  runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.3'

}

task downloadAndExtractOrientDB << {
     println 'Download OrientDB with wget.'
     def f = new File('orientdb.tar.gz') 
     
     if (f.exists()){
     	println 'OrientDB already downloaded.';
	return
     }

     println 'Download OrientDB ...'
     println "wget http://orientdb.com/download.php?file=orientdb-community-2.1.5.tar.gz&os=multi -O orientdb.tar.gz".execute().text
     
     f = new File('orientdb.tar.gz')
     if(!f.exists()){
	throw new RuntimeException("Error downloading OrientDB.")
     }	

     println "tar xfzv orientdb.tar.gz".execute().text

}

task copyConfigFilesToOrientDB(type:Copy){
    into "orientdb-community-2.1.5/config"
    from "conf/orientdb-server-config.xml"
}

task copyServerSh(type:Copy){
    into "orientdb-community-2.1.5/bin"
    from "conf/server.sh"
}

task copyToLib(type: Copy) {    
    into "jars"
    from configurations.runtime 
}

task copyOctopus(type:Copy) {
   into "jars"
   from "$buildDir/libs/octopus.jar"
}

compileJava.dependsOn downloadAndExtractOrientDB
compileJava.dependsOn copyConfigFilesToOrientDB
compileJava.dependsOn copyServerSh
compileJava.dependsOn copyToLib
compileJava.dependsOn copyOctopus

